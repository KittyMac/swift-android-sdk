From: Marc Prud'hommeaux <mwp1@doraell.edu>
Date: Wed, 7 May 2025 10:24:19 -0400

diff --git a/llbuild/lib/Basic/Subprocess.cpp b/llbuild/lib/Basic/Subprocess.cpp
index bf2fd4d1..8d4ee3de 100644
--- a/llbuild/lib/Basic/Subprocess.cpp
+++ b/llbuild/lib/Basic/Subprocess.cpp
@@ -79,9 +79,12 @@ int pthread_fchdir_np(int fd)
 // Implementation mostly copied from _CFPosixSpawnFileActionsChdir in swift-corelibs-foundation
 static int posix_spawn_file_actions_addchdir_polyfill(posix_spawn_file_actions_t * __restrict file_actions,
                                                       const char * __restrict path) {
-#if defined(__GLIBC__) && !__GLIBC_PREREQ(2, 29)
+#if (defined(__GLIBC__) && !__GLIBC_PREREQ(2, 29)) || (defined(__OpenBSD__)) || (defined(__ANDROID__) && __ANDROID_API__ < 34)
   // Glibc versions prior to 2.29 don't support posix_spawn_file_actions_addchdir_np, impacting:
   //  - Amazon Linux 2 (EoL mid-2025)
+  // Currently missing as of:
+  //  - OpenBSD 7.5 (April 2024)
+  //  - Android <= 14
   return ENOSYS;
 #elif defined(__APPLE__) && defined(__MAC_OS_X_VERSION_MIN_REQUIRED) && __MAC_OS_X_VERSION_MIN_REQUIRED < 101500
   // Conditionally available on macOS if building with a deployment target older than 10.15
@@ -89,10 +92,6 @@ static int posix_spawn_file_actions_addchdir_polyfill(posix_spawn_file_actions_t
     return posix_spawn_file_actions_addchdir_np(file_actions, path);
   }
   return ENOSYS;
-#elif defined(__OpenBSD__)
-  // Currently missing as of:
-  //  - OpenBSD 7.5 (April 2024)
-  return ENOSYS;
 #elif defined(__GLIBC__) || defined(__APPLE__) || defined(__FreeBSD__) || (defined(__ANDROID__) && __ANDROID_API__ >= 34) || defined(__musl__)
   // Pre-standard posix_spawn_file_actions_addchdir_np version available in:
   //  - Solaris 11.3 (October 2015)
diff --git a/swift-corelibs-libdispatch/src/swift/CMakeLists.txt b/swift-corelibs-libdispatch/src/swift/CMakeLists.txt
index 38bef37..d0ddf98 100644
--- a/swift-corelibs-libdispatch/src/swift/CMakeLists.txt
+++ b/swift-corelibs-libdispatch/src/swift/CMakeLists.txt
@@ -15,6 +15,7 @@ add_library(swiftDispatch
   Source.swift
   Time.swift
   Wrapper.swift)
+set(CMAKE_SHARED_LINKER_FLAGS "")
 target_compile_options(swiftDispatch PRIVATE
   "SHELL:-Xcc -fblocks"
   "SHELL:-Xcc -fmodule-map-file=${PROJECT_SOURCE_DIR}/dispatch/module.modulemap"
