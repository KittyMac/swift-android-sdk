diff --git a/llbuild/unittests/CMakeLists.txt b/llbuild/unittests/CMakeLists.txt
index 92a1ee38..52273afb 100644
--- a/llbuild/unittests/CMakeLists.txt
+++ b/llbuild/unittests/CMakeLists.txt
@@ -6,4 +6,4 @@ function(add_llbuild_unittest test_dirname)
 add_subdirectory(CAPI)
 add_subdirectory(Core)
 add_subdirectory(BuildSystem)
-add_subdirectory(Ninja)
+#add_subdirectory(Ninja)
diff --git a/sourcekit-lsp/Sources/LanguageServerProtocolJSONRPC/JSONRPCConnection.swift b/sourcekit-lsp/Sources/LanguageServerProtocolJSONRPC/JSONRPCConnection.swift
index 0be22ce8..33ca7ee5 100644
--- a/sourcekit-lsp/Sources/LanguageServerProtocolJSONRPC/JSONRPCConnection.swift
+++ b/sourcekit-lsp/Sources/LanguageServerProtocolJSONRPC/JSONRPCConnection.swift
@@ -16,6 +16,9 @@ public import Foundation
 public import LanguageServerProtocol
 import SKLogging
 import SwiftExtensions
+#if canImport(Android)
+import Android
+#endif
 #else
 import Dispatch
 import Foundation
diff --git a/swiftpm/Package.swift b/swiftpm/Package.swift
index 48cd98431..6eaacae00 100644
--- a/swiftpm/Package.swift
+++ b/swiftpm/Package.swift
@@ -76,7 +77,10 @@ let includeDynamicLibrary: Bool = false
 let systemSQLitePkgConfig: String? = nil
 #else
 let includeDynamicLibrary: Bool = true
-let systemSQLitePkgConfig: String? = "sqlite3"
+var systemSQLitePkgConfig: String? = "sqlite3"
+if ProcessInfo.processInfo.environment["SWIFTCI_INSTALL_RPATH_OS"] == "android" {
+    systemSQLitePkgConfig = nil
+}
 #endif
 
 /** An array of products which have two versions listed: one dynamically linked, the other with the
@@ -199,7 +203,7 @@ let package = Package(
             dependencies: [
                 "_AsyncFileSystem",
                 .target(name: "SPMSQLite3", condition: .when(platforms: [.macOS, .iOS, .tvOS, .watchOS, .visionOS, .macCatalyst, .linux])),
-                .product(name: "SwiftToolchainCSQLite", package: "swift-toolchain-sqlite", condition: .when(platforms: [.windows])),
+                .product(name: "SwiftToolchainCSQLite", package: "swift-toolchain-sqlite", condition: .when(platforms: [.windows, .android])),
                 .product(name: "DequeModule", package: "swift-collections"),
                 .product(name: "OrderedCollections", package: "swift-collections"),
                 .product(name: "SwiftToolsSupport-auto", package: "swift-tools-support-core"),
diff --git a/swiftpm/Sources/Basics/SQLite.swift b/swiftpm/Sources/Basics/SQLite.swift
index 2ad235030..803490b48 100644
--- a/swiftpm/Sources/Basics/SQLite.swift
+++ b/swiftpm/Sources/Basics/SQLite.swift
@@ -12,7 +12,7 @@
 
 import Foundation
 
-#if SWIFT_PACKAGE && os(Windows)
+#if SWIFT_PACKAGE && (os(Windows) || os(Android))
 #if USE_IMPL_ONLY_IMPORTS
 @_implementationOnly import SwiftToolchainCSQLite
 #else
diff --git a/swiftpm/Utilities/bootstrap b/swiftpm/Utilities/bootstrap
index 085056de..1ded1a90 100755
--- a/swiftpm/Utilities/bootstrap
+++ b/swiftpm/Utilities/bootstrap
@@ -827,6 +827,7 @@ def get_swiftpm_flags(args):
     # Don't use GNU strerror_r on Android.
     if '-android' in args.build_target:
         build_flags.extend(["-Xswiftc", "-Xcc", "-Xswiftc", "-U_GNU_SOURCE"])
+        build_flags.extend(["-Xlinker", "-landroid-spawn"])
 
     cross_compile_hosts = args.cross_compile_hosts
     if cross_compile_hosts:
